{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar FlashMessageManager = function () {\n  function FlashMessageManager() {\n    _classCallCheck(this, FlashMessageManager);\n\n    this._preservedFlashMessages = [];\n    this._currentFlashMessage = null;\n    this._enabled = true;\n  }\n\n  _createClass(FlashMessageManager, [{\n    key: \"isEnabled\",\n    get: function get() {\n      return !!this._enabled;\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled() {\n      var disable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this._enabled = !disable;\n    }\n  }, {\n    key: \"hold\",\n    value: function hold(_tempInstance) {\n      if (\"_id\" in _tempInstance) {\n        var wasHolded = false;\n\n        if (this._preservedFlashMessages.length > 0) {\n          wasHolded = this._preservedFlashMessages[this._preservedFlashMessages.length - 1]._id === _tempInstance._id;\n        }\n\n        if (!wasHolded) {\n          this._preservedFlashMessages.push(this._currentFlashMessage);\n\n          this._currentFlashMessage = null;\n          this.register(_tempInstance);\n        }\n      }\n    }\n  }, {\n    key: \"unhold\",\n    value: function unhold() {\n      if (this._preservedFlashMessages.length > 0) {\n        if (!!this._currentFlashMessage) {\n          this._currentFlashMessage.hideMessage();\n\n          this._currentFlashMessage = null;\n        }\n\n        this.register(this._preservedFlashMessages.pop());\n      }\n    }\n  }, {\n    key: \"register\",\n    value: function register(_instance) {\n      if (!this._currentFlashMessage && \"_id\" in _instance) {\n        this._currentFlashMessage = _instance;\n      }\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(_instance) {\n      if (!!this._currentFlashMessage && this._currentFlashMessage._id === _instance._id) {\n        this._currentFlashMessage = null;\n      }\n    }\n  }, {\n    key: \"getCurrent\",\n    value: function getCurrent() {\n      return this._currentFlashMessage;\n    }\n  }]);\n\n  return FlashMessageManager;\n}();\n\nexport default new FlashMessageManager();","map":{"version":3,"sources":["C:/Users/ZAIIIN/OneDrive/Desktop/FYP_Project/node_modules/react-native-flash-message/src/FlashMessageManager.js"],"names":["FlashMessageManager","_preservedFlashMessages","_currentFlashMessage","_enabled","disable","_tempInstance","wasHolded","length","_id","push","register","hideMessage","pop","_instance"],"mappings":";;;IAGMA,mB;;;;SACJC,uB,GAA0B,E;SAC1BC,oB,GAAuB,I;SACvBC,Q,GAAW,I;;;;;SACX,eAAgB;AACd,aAAO,CAAC,CAAC,KAAKA,QAAd;AACD;;;WACD,uBAA4B;AAAA,UAAhBC,OAAgB,uEAAN,IAAM;AAC1B,WAAKD,QAAL,GAAgB,CAACC,OAAjB;AACD;;;WACD,cAAKC,aAAL,EAAoB;AAClB,UAAI,SAASA,aAAb,EAA4B;AAC1B,YAAIC,SAAS,GAAG,KAAhB;;AACA,YAAI,KAAKL,uBAAL,CAA6BM,MAA7B,GAAsC,CAA1C,EAA6C;AAC3CD,UAAAA,SAAS,GAAG,KAAKL,uBAAL,CAA6B,KAAKA,uBAAL,CAA6BM,MAA7B,GAAsC,CAAnE,EAAsEC,GAAtE,KAA8EH,aAAa,CAACG,GAAxG;AACD;;AAED,YAAI,CAACF,SAAL,EAAgB;AACd,eAAKL,uBAAL,CAA6BQ,IAA7B,CAAkC,KAAKP,oBAAvC;;AACA,eAAKA,oBAAL,GAA4B,IAA5B;AAEA,eAAKQ,QAAL,CAAcL,aAAd;AACD;AACF;AACF;;;WACD,kBAAS;AACP,UAAI,KAAKJ,uBAAL,CAA6BM,MAA7B,GAAsC,CAA1C,EAA6C;AAE3C,YAAI,CAAC,CAAC,KAAKL,oBAAX,EAAiC;AAC/B,eAAKA,oBAAL,CAA0BS,WAA1B;;AACA,eAAKT,oBAAL,GAA4B,IAA5B;AACD;;AAED,aAAKQ,QAAL,CAAc,KAAKT,uBAAL,CAA6BW,GAA7B,EAAd;AACD;AACF;;;WACD,kBAASC,SAAT,EAAoB;AAClB,UAAI,CAAC,KAAKX,oBAAN,IAA8B,SAASW,SAA3C,EAAsD;AACpD,aAAKX,oBAAL,GAA4BW,SAA5B;AACD;AACF;;;WACD,oBAAWA,SAAX,EAAsB;AACpB,UAAI,CAAC,CAAC,KAAKX,oBAAP,IAA+B,KAAKA,oBAAL,CAA0BM,GAA1B,KAAkCK,SAAS,CAACL,GAA/E,EAAoF;AAClF,aAAKN,oBAAL,GAA4B,IAA5B;AACD;AACF;;;WACD,sBAAa;AACX,aAAO,KAAKA,oBAAZ;AACD;;;;;;AAGH,eAAe,IAAIF,mBAAJ,EAAf","sourcesContent":["/**\n * Utility class to handle the \"default\" FlashMessage instance to global use\n */\nclass FlashMessageManager {\n  _preservedFlashMessages = [];\n  _currentFlashMessage = null;\n  _enabled = true;\n  get isEnabled() {\n    return !!this._enabled;\n  }\n  setDisabled(disable = true) {\n    this._enabled = !disable;\n  }\n  hold(_tempInstance) {\n    if (\"_id\" in _tempInstance) {\n      let wasHolded = false;\n      if (this._preservedFlashMessages.length > 0) {\n        wasHolded = this._preservedFlashMessages[this._preservedFlashMessages.length - 1]._id === _tempInstance._id;\n      }\n\n      if (!wasHolded) {\n        this._preservedFlashMessages.push(this._currentFlashMessage);\n        this._currentFlashMessage = null;\n\n        this.register(_tempInstance);\n      }\n    }\n  }\n  unhold() {\n    if (this._preservedFlashMessages.length > 0) {\n      // here current intance it's the holded momentarily instance...\n      if (!!this._currentFlashMessage) {\n        this._currentFlashMessage.hideMessage();\n        this._currentFlashMessage = null;\n      }\n\n      this.register(this._preservedFlashMessages.pop());\n    }\n  }\n  register(_instance) {\n    if (!this._currentFlashMessage && \"_id\" in _instance) {\n      this._currentFlashMessage = _instance;\n    }\n  }\n  unregister(_instance) {\n    if (!!this._currentFlashMessage && this._currentFlashMessage._id === _instance._id) {\n      this._currentFlashMessage = null;\n    }\n  }\n  getCurrent() {\n    return this._currentFlashMessage;\n  }\n}\n\nexport default new FlashMessageManager();\n"]},"metadata":{},"sourceType":"module"}