{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { firebase } from \"../firebaseConfig/firebase\";\nimport { successMessage, errorMessage } from \"../Components/MessageAlert\";\nimport AppButton from \"../Components/AppButton\";\nimport ProgressMeter from \"../Components/ProgressMeter\";\nimport ServicesBox from \"../Components/ServicesBox\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Searchbar } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MainScreen = function MainScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      useToken = _useState2[0],\n      setUseToken = _useState2[1];\n\n  useEffect(function () {\n    var getToken = function _callee() {\n      var tokens;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 2:\n              tokens = _context.sent;\n              setUseToken(tokens);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getToken();\n  }, []);\n\n  var handleLogout = function handleLogout() {\n    firebase.auth().signOut().then(function () {\n      AsyncStorage.removeItem('token');\n      successMessage('User Succesfully signed out!');\n      navigation.replace(\"Login\");\n    }).catch(function (err) {\n      errorMessage(err.ToString());\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.headerContainer,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#61dafb\"\n    }), _jsx(ServicesBox, {\n      title: \"Water\"\n    }), _jsx(ServicesBox, {\n      title: \"Light\"\n    }), _jsx(ServicesBox, {\n      title: \"Rain\"\n    }), _jsx(ServicesBox, {\n      title: \"Moistuer\"\n    }), _jsx(ServicesBox, {\n      title: \"Temperature\"\n    }), _jsx(ServicesBox, {\n      title: \"Humidity\"\n    }), _jsx(AppButton, {\n      title: \"Water\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Setting\");\n      }\n    }), _jsx(AppButton, {\n      title: \"Light\"\n    }), _jsx(AppButton, {\n      title: \"Rain\"\n    }), _jsx(AppButton, {\n      title: \"Moistuer\"\n    }), _jsx(AppButton, {\n      title: \"Temprature\"\n    }), _jsx(AppButton, {\n      title: \"Humidity\"\n    }), _jsx(ProgressMeter, {\n      title: \"Light\",\n      point: \"0\"\n    }), _jsx(ProgressMeter, {\n      title: \"Water\",\n      point: \"0\"\n    }), _jsx(ProgressMeter, {\n      title: \"Rain\",\n      point: \"0\"\n    }), _jsx(ProgressMeter, {\n      title: \"Light\",\n      point: \"0\"\n    }), _jsx(ProgressMeter, {\n      title: \"Light\",\n      point: \"0\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  headerContainer: {\n    width: \"100%\",\n    marginTop: 50\n  },\n  addressContainer: {\n    padding: 13,\n    paddingBottom: 6,\n    paddingTop: 5,\n    width: '100%',\n    flexDirection: 'row',\n    backgroundColor: \"#ffffff\",\n    justifyContent: \"space-between\"\n  },\n  addressText: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginRight: 10,\n    textAlign: \"justify\"\n  },\n  iconContainer: {\n    flexDirection: 'column',\n    justifyContent: \"center\"\n  },\n  imageSlider: {\n    width: \"100%\",\n    marginTop: 5\n  }\n});\nexport default MainScreen;","map":{"version":3,"sources":["C:/Users/ZAIIIN/OneDrive/Desktop/FYP_Project/App/Screens/MainScreen.js"],"names":["React","useEffect","useState","firebase","successMessage","errorMessage","AppButton","ProgressMeter","ServicesBox","AsyncStorage","FontAwesome5","Searchbar","MainScreen","navigation","useToken","setUseToken","getToken","getItem","tokens","handleLogout","auth","signOut","then","removeItem","replace","catch","err","ToString","styles","headerContainer","navigate","StyleSheet","create","width","marginTop","addressContainer","padding","paddingBottom","paddingTop","flexDirection","backgroundColor","justifyContent","addressText","fontWeight","fontSize","marginRight","textAlign","iconContainer","imageSlider"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View, StyleSheet, Platform, SafeAreaView, ScrollView, StatusBar } from 'react-native';\r\n\r\nimport { firebase } from '../firebaseConfig/firebase';\r\nimport { successMessage, errorMessage } from '../Components/MessageAlert';\r\nimport AppButton from '../Components/AppButton';\r\nimport ProgressMeter from '../Components/ProgressMeter';\r\nimport ServicesBox from '../Components/ServicesBox';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { Searchbar } from 'react-native-paper'; \r\n\r\n\r\nconst MainScreen = ({navigation}) => {\r\n\r\n    const [useToken, setUseToken] = useState(\"\");\r\n    \r\n    useEffect(()=>{\r\n        const getToken = async() => {\r\n            const tokens = await AsyncStorage.getItem(\"token\");\r\n            setUseToken(tokens);\r\n        }\r\n        getToken();\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        firebase.auth().signOut().then(() => {\r\n            AsyncStorage.removeItem('token');\r\n            successMessage('User Succesfully signed out!')\r\n            navigation.replace(\"Login\")\r\n        }).catch((err)=>{\r\n            errorMessage(err.ToString());\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <StatusBar backgroundColor=\"#61dafb\" />\r\n            \r\n            {/* <Text>Home Page This is. {useToken}</Text>\r\n            <AppButton title=\"Logout\" onPress={handleLogout} /> */}\r\n\r\n            <ServicesBox title={\"Water\"} />\r\n            <ServicesBox title={\"Light\"} />\r\n            <ServicesBox title={\"Rain\"} />\r\n            <ServicesBox title={\"Moistuer\"} />\r\n            <ServicesBox title={\"Temperature\"} />\r\n            <ServicesBox title={\"Humidity\"} />\r\n            \r\n\r\n            <AppButton title={\"Water\"} onPress={()=> navigation.navigate(\"Setting\")} />\r\n            <AppButton title={\"Light\"} />\r\n            <AppButton title={\"Rain\"} />\r\n            <AppButton title={\"Moistuer\"} />\r\n            <AppButton title={\"Temprature\"} />\r\n            <AppButton title={\"Humidity\"} />\r\n\r\n            <ProgressMeter title={\"Light\"} point={\"0\"} />\r\n            <ProgressMeter title={\"Water\"} point={\"0\"} />\r\n            <ProgressMeter title={\"Rain\"} point={\"0\"} />\r\n            <ProgressMeter title={\"Light\"} point={\"0\"} />\r\n            <ProgressMeter title={\"Light\"} point={\"0\"} />\r\n\r\n                     \r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        width:\"100%\",\r\n        marginTop: 50,\r\n    },\r\n    addressContainer:{\r\n        padding: 13,\r\n        paddingBottom: 6,\r\n        paddingTop: 5,\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        backgroundColor:\"#ffffff\",\r\n        justifyContent:\"space-between\"\r\n    },\r\n    addressText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n        marginRight: 10,\r\n        textAlign: \"justify\",\r\n    },\r\n    iconContainer:{\r\n        flexDirection:'column',\r\n        justifyContent: \"center\",\r\n    },\r\n    imageSlider: {\r\n        width: \"100%\",\r\n        marginTop: 5,\r\n    }\r\n});\r\n\r\nexport default MainScreen;"]},"metadata":{},"sourceType":"module"}