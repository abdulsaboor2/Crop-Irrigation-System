{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AppButton from \"../Components/AppButton\";\nimport AppInput from \"../Components/AppInput\";\nimport { errorMessage, successMessage } from \"../Components/MessageAlert\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport FlashMessage from \"react-native-flash-message\";\nimport { firebase } from \"../firebaseConfig/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullname = _useState2[0],\n      setFullname = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pass = _useState6[0],\n      setPass = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cpass = _useState8[0],\n      setCPass = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var handleRegisterUser = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!(fullname == \"\" && email == \"\" && pass == \"\" && cpass == \"\")) {\n              _context.next = 6;\n              break;\n            }\n\n            setIsLoading(false);\n            errorMessage(\"Please filled all Field\");\n            _context.next = 29;\n            break;\n\n          case 6:\n            if (!(fullname == \"\" || email == \"\" || pass == \"\" || cpass == \"\")) {\n              _context.next = 13;\n              break;\n            }\n\n            if (fullname == \"\") {\n              setIsLoading(false);\n              errorMessage(\"Fullname does not Empty\");\n            }\n\n            if (email == \"\") {\n              setIsLoading(false);\n              errorMessage(\"Email does not Empty\");\n            }\n\n            if (pass == \"\") {\n              setIsLoading(false);\n              errorMessage(\"Password does not Empty\");\n            }\n\n            if (cpass == \"\") {\n              setIsLoading(false);\n              errorMessage(\"Confirm Password does not Empty\");\n            }\n\n            _context.next = 29;\n            break;\n\n          case 13:\n            if (!(pass != cpass)) {\n              _context.next = 18;\n              break;\n            }\n\n            setIsLoading(false);\n            errorMessage(\"Password does not Match\");\n            _context.next = 29;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            console.log(email, pass, fullname, cpass);\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, pass).then(function (response) {\n              var uid = response.user.uid;\n              var data = {\n                id: uid,\n                email: email,\n                fullname: fullname,\n                phone: \"\",\n                address: \"\",\n                lat: \"\",\n                long: \"\",\n                images: \"\"\n              };\n              firebase.firestore().collection(\"Customers\").doc(uid).set(data).then(function () {\n                setIsLoading(false);\n                navigation.navigate(\"Login\");\n                successMessage(\"Account Successfully Registered\");\n              }).catch(function (err) {\n                successMessage(err.toString());\n                setIsLoading(false);\n              });\n            }).catch(function (err) {\n              errorMessage(err.toString());\n              setIsLoading(false);\n            }));\n\n          case 22:\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](18);\n            errorMessage(_context.t0.toString());\n            setIsLoading(false);\n\n          case 28:\n            setIsLoading(false);\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[18, 24]], Promise);\n  };\n\n  var handleBtnLoading = function handleBtnLoading() {\n    return isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#00ff00\"\n    }) : \"Register\";\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsxs(View, {\n      style: styles.logoContainer,\n      children: [_jsx(FontAwesome5, {\n        style: styles.LogoIcons,\n        name: \"users\",\n        size: 100,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: styles.logoText,\n        children: \" Register\"\n      })]\n    }), _jsxs(View, {\n      style: styles.textInputContainer,\n      children: [_jsx(AppInput, {\n        onChangeText: function onChangeText(e) {\n          return setFullname(e);\n        },\n        placeholder: \"Fullname\",\n        name: \"user\",\n        size: 25\n      }), _jsx(AppInput, {\n        onChangeText: function onChangeText(e) {\n          return setEmail(e);\n        },\n        keyboardType: \"email-address\",\n        placeholder: \"Email\",\n        name: \"user\",\n        size: 25\n      }), _jsx(AppInput, {\n        onChangeText: function onChangeText(e) {\n          return setPass(e);\n        },\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        name: \"user-lock\",\n        size: 18\n      }), _jsx(AppInput, {\n        onChangeText: function onChangeText(e) {\n          return setCPass(e);\n        },\n        secureTextEntry: true,\n        placeholder: \"Confirm Password\",\n        name: \"user-lock\",\n        size: 18\n      })]\n    }), _jsx(AppButton, {\n      title: handleBtnLoading(),\n      onPress: handleRegisterUser\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Login\");\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: \"center\",\n          marginTop: 15\n        },\n        children: \"Already Have an Account\"\n      })\n    }), _jsx(FlashMessage, {\n      position: \"top\"\n    })]\n  });\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    flexDirection: \"column\"\n  },\n  LogoIcons: {\n    textAlign: \"center\"\n  },\n  logoText: {\n    fontSize: 35,\n    textAlign: \"center\"\n  },\n  textInputContainer: {\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/ZAIIIN/OneDrive/Desktop/FYP_Project/App/Screens/RegisterScreen.js"],"names":["React","useState","AppButton","AppInput","errorMessage","successMessage","FontAwesome5","FlashMessage","firebase","RegisterScreen","navigation","fullname","setFullname","email","setEmail","pass","setPass","cpass","setCPass","isLoading","setIsLoading","handleRegisterUser","console","log","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","phone","address","lat","long","images","firestore","collection","doc","set","navigate","catch","err","toString","handleBtnLoading","styles","logoContainer","LogoIcons","logoText","textInputContainer","e","textAlign","marginTop","StyleSheet","create","flexDirection","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { SafeAreaView, View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\r\n\r\nimport AppButton from '../Components/AppButton';\r\nimport AppInput from '../Components/AppInput';\r\nimport { errorMessage, successMessage } from '../Components/MessageAlert';\r\n\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport FlashMessage from \"react-native-flash-message\";\r\nimport { firebase } from '../firebaseConfig/firebase';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n    const [fullname, setFullname]= useState(\"\");\r\n    const [email, setEmail]= useState(\"\");\r\n    const [pass, setPass]= useState(\"\");\r\n    const [cpass, setCPass]= useState(\"\");\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // const [errorMessage, setErrorMessage] = useState();\r\n\r\n    const handleRegisterUser = async() =>{\r\n        setIsLoading(true);\r\n        if(fullname == \"\" && email == \"\" && pass == \"\" && cpass == \"\"){\r\n            setIsLoading(false)\r\n            errorMessage(\"Please filled all Field\")\r\n        }\r\n        else if(fullname == \"\" || email == \"\" || pass == \"\" || cpass == \"\"){\r\n            if(fullname == \"\"){\r\n                setIsLoading(false);\r\n                errorMessage(\"Fullname does not Empty\")\r\n            }\r\n            if(email == \"\"){\r\n                setIsLoading(false);\r\n                errorMessage(\"Email does not Empty\")\r\n            }\r\n            if(pass == \"\"){\r\n                setIsLoading(false);\r\n                errorMessage(\"Password does not Empty\")\r\n            }\r\n            if(cpass == \"\"){\r\n                setIsLoading(false);\r\n                errorMessage(\"Confirm Password does not Empty\")\r\n            }\r\n        }\r\n        else if(pass != cpass){\r\n            setIsLoading(false);\r\n            errorMessage(\"Password does not Match\")\r\n        }\r\n        else{\r\n            try{\r\n                console.log(email, pass, fullname, cpass);\r\n                await firebase.auth().createUserWithEmailAndPassword(email, pass).then((response) => {\r\n                    const uid = response.user.uid;\r\n                    const data = {\r\n                    id: uid,\r\n                    email,\r\n                    fullname,\r\n                    phone:\"\",\r\n                    address:\"\",\r\n                    lat:\"\",\r\n                    long:\"\",\r\n                    images:\"\",\r\n                    };\r\n                    firebase.firestore().collection(\"Customers\").doc(uid).set(data).then(() => {\r\n                        setIsLoading(false);\r\n                        navigation.navigate(\"Login\")\r\n                        successMessage(\"Account Successfully Registered\");\r\n                    })\r\n                    .catch((err) => {\r\n                        successMessage(err.toString());\r\n                        setIsLoading(false);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    errorMessage(err.toString());\r\n                    setIsLoading(false);\r\n                });\r\n            } catch (err) {\r\n                errorMessage(err.toString());\r\n                setIsLoading(false);\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleBtnLoading = () => {\r\n        return (isLoading ? <ActivityIndicator size=\"large\" color=\"#00ff00\" /> : \"Register\")\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <View style={styles.logoContainer}>\r\n                <FontAwesome5 style={styles.LogoIcons} name=\"users\" size={100} color=\"black\" />\r\n                <Text style={styles.logoText}> Register</Text>\r\n            </View>\r\n            <View style={styles.textInputContainer}>\r\n                <AppInput onChangeText={(e)=>setFullname(e)} placeholder={\"Fullname\"} name={\"user\"} size={25} />\r\n                <AppInput onChangeText={(e)=>setEmail(e)} keyboardType='email-address' placeholder={\"Email\"} name={\"user\"} size={25} />\r\n                <AppInput onChangeText={(e)=>setPass(e)} secureTextEntry={true} placeholder={\"Password\"} name={\"user-lock\"} size={18} />\r\n                <AppInput onChangeText={(e)=>setCPass(e)} secureTextEntry={true} placeholder={\"Confirm Password\"} name={\"user-lock\"} size={18} />\r\n            </View>\r\n            <AppButton title={handleBtnLoading()} onPress={handleRegisterUser} />\r\n            <TouchableOpacity onPress={()=>navigation.navigate(\"Login\")}>\r\n                <Text style={{textAlign:\"center\", marginTop:15}}>Already Have an Account</Text>\r\n            </TouchableOpacity>\r\n            <FlashMessage position=\"top\" />\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    logoContainer:{\r\n        // marginTop:30,\r\n        flexDirection: \"column\",\r\n      },\r\n      LogoIcons:{\r\n        textAlign: \"center\",\r\n      },\r\n      logoText: {\r\n        fontSize: 35,\r\n        textAlign: \"center\"\r\n      },\r\n      textInputContainer: {\r\n        marginTop: 30,\r\n      },\r\n})"]},"metadata":{},"sourceType":"module"}