{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport LoginScreen from \"./App/Screens/LoginScreen\";\nimport RegisterScreen from \"./App/Screens/RegisterScreen\";\nimport MainScreen from \"./App/Screens/MainScreen\";\nimport AppScreen from \"./App/Screens/AppScreen\";\nimport SettingScreen from \"./App/Screens/SettingScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs(['AsyncStorage has been extracted from react-native core']);\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Main\") {\n            iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: 30,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#1976d2\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Main\",\n      component: MainScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Setting\",\n      component: SettingScreen,\n      options: {\n        headerStyle: {\n          backgroundColor: '#61dafb'\n        },\n        headerLeft: function headerLeft() {\n          return _jsx(Button, {\n            onPress: function onPress() {\n              return goBack();\n            },\n            title: \"<\",\n            color: \"#000\"\n          });\n        }\n      }\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"MyTab\",\n        component: MyTabs,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen\n      }), _jsx(Stack.Screen, {\n        name: \"App\",\n        component: AppScreen,\n        options: {\n          title: 'Home'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Setting\",\n        component: SettingScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZAIIIN/OneDrive/Desktop/FYP_Project/App.js"],"names":["StatusBar","LoginScreen","RegisterScreen","MainScreen","AppScreen","SettingScreen","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","LogBox","ignoreLogs","Stack","Tab","MyTabs","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerStyle","backgroundColor","headerLeft","goBack","App","headerShown","title","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Button, View, LogBox } from 'react-native';\n\nimport LoginScreen from './App/Screens/LoginScreen';\nimport RegisterScreen from './App/Screens/RegisterScreen';\nimport MainScreen from './App/Screens/MainScreen';\nimport AppScreen from './App/Screens/AppScreen';\nimport SettingScreen from './App/Screens/SettingScreen';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\nLogBox.ignoreLogs(['AsyncStorage has been extracted from react-native core']);\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n        if (route.name === \"Main\") {\n          iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n      } else if (route.name === \"Profile\") {\n          iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n        }\n        // You can return any component that you like here!\n        return <Ionicons name={iconName} size={30} color={color} />;\n      },\n      tabBarActiveTintColor: \"#1976d2\",\n      tabBarInactiveTintColor: \"gray\",\n    })}>\n      <Tab.Screen name=\"Main\" component={MainScreen} />\n      <Tab.Screen name=\"Setting\" component={SettingScreen} options={{\n        headerStyle: {\n              backgroundColor: '#61dafb'\n           },\n           headerLeft: () => (\n            <Button\n              onPress={() => goBack()}\n              title=\"<\"\n              color=\"#000\"\n            />\n          ),\n          }} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"MyTab\" component={MyTabs} options={{headerShown: false}} />\n        <Stack.Screen name=\"Main\" component={MainScreen}  />\n        <Stack.Screen name=\"App\" component={AppScreen} options={{ title: 'Home' }} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} options={{headerShown: false}} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} options={{headerShown: false}} />\n        <Stack.Screen name=\"Setting\" component={SettingScreen} options={{headerShown: false}} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}