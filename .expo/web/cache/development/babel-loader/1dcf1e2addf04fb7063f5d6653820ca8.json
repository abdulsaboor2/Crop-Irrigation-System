{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AppButton from \"../Components/AppButton\";\nimport AppInput from \"../Components/AppInput\";\nimport { errorMessage, successMessage } from \"../Components/MessageAlert\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { firebase } from \"../firebaseConfig/firebase\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport FlashMessage from 'react-native-flash-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pass = _useState4[0],\n      setPass = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var handleLogin = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!(email == \"\" && pass == \"\")) {\n              _context.next = 6;\n              break;\n            }\n\n            setIsLoading(false);\n            errorMessage(\"Please Enter Email and Password\");\n            _context.next = 21;\n            break;\n\n          case 6:\n            if (!(email == \"\" || pass == \"\")) {\n              _context.next = 10;\n              break;\n            }\n\n            if (email == \"\") {\n              setIsLoading(false);\n              errorMessage(\"Email is Required\");\n            } else {\n              setIsLoading(false);\n              errorMessage(\"Password is Required\");\n            }\n\n            _context.next = 21;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            console.log(email, pass);\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, pass).then(function (response) {\n              var uid = response.user.uid;\n              console.log(uid);\n              firebase.firestore().collection(\"Customers\").doc(uid).get().then(function (firestoreDocument) {\n                if (!firestoreDocument.exists) {\n                  ShowError(\"User does not exist anymore.\");\n                  setIsLoading(false);\n                } else {\n                  AsyncStorage.setItem(\"token\", uid);\n                  navigation.replace(\"Main\");\n                  successMessage(\"Login Successful\");\n                }\n              });\n            }).catch(function (err) {\n              setIsLoading(false);\n              errorMessage(err.toString());\n              console.log(\"1\");\n            }));\n\n          case 14:\n            _context.next = 21;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](10);\n            setIsLoading(false);\n            errorMessage(_context.t0.toString());\n            console.log(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[10, 16]], Promise);\n  };\n\n  var handleBtnLoading = function handleBtnLoading() {\n    return isLoading ? _jsx(ActivityIndicator, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        textAlign: \"center\"\n      },\n      size: \"large\",\n      color: \"#00ff00\"\n    }) : \"Login\";\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.logoContainer,\n      children: [_jsx(FontAwesome5, {\n        style: styles.LogoIcons,\n        name: \"user-lock\",\n        size: 100,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: styles.logoText,\n        children: \" Login\"\n      })]\n    }), _jsxs(View, {\n      style: styles.textInputContainer,\n      children: [_jsx(AppInput, {\n        onChangeText: function onChangeText(e) {\n          return setEmail(e);\n        },\n        keyboardType: \"email-address\",\n        placeholder: \"Email\",\n        name: \"user\",\n        size: 25\n      }), _jsx(AppInput, {\n        onChangeText: function onChangeText(e) {\n          return setPass(e);\n        },\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        name: \"lock\",\n        size: 25\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: {\n            textAlign: \"right\",\n            marginRight: 5\n          },\n          children: \"Forget Password?\"\n        })\n      })]\n    }), _jsx(AppButton, {\n      title: handleBtnLoading(),\n      onPress: handleLogin\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Register\");\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: \"center\",\n          marginTop: 15\n        },\n        children: \"Create new Account?\"\n      })\n    }), _jsx(FlashMessage, {\n      position: \"top\"\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    marginTop: 50,\n    flexDirection: \"column\"\n  },\n  LogoIcons: {\n    textAlign: \"center\"\n  },\n  logoText: {\n    fontSize: 35,\n    textAlign: \"center\"\n  },\n  textInputContainer: {\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/ZAIIIN/OneDrive/Desktop/FYP_Project/App/Screens/LoginScreen.js"],"names":["React","useState","AppButton","AppInput","errorMessage","successMessage","FontAwesome5","firebase","AsyncStorage","FlashMessage","LoginScreen","navigation","email","setEmail","pass","setPass","isLoading","setIsLoading","handleLogin","console","log","auth","signInWithEmailAndPassword","then","response","uid","user","firestore","collection","doc","get","firestoreDocument","exists","ShowError","setItem","replace","catch","err","toString","handleBtnLoading","flexDirection","justifyContent","alignItems","alignSelf","textAlign","styles","logoContainer","LogoIcons","logoText","textInputContainer","e","marginRight","navigate","marginTop","StyleSheet","create","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { SafeAreaView, View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\r\n\r\nimport AppButton from '../Components/AppButton';\r\nimport AppInput from '../Components/AppInput';\r\nimport { errorMessage, successMessage } from '../Components/MessageAlert';\r\n\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport {firebase} from '../firebaseConfig/firebase';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport FlashMessage from 'react-native-flash-message'\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n    const [email, setEmail]= useState(\"\");\r\n    const [pass, setPass]= useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleLogin = async() => {\r\n      setIsLoading(true);\r\n      if(email == \"\" && pass == \"\"){\r\n        setIsLoading(false);\r\n        errorMessage(\"Please Enter Email and Password\");\r\n      }\r\n      else if(email == \"\" || pass == \"\"){\r\n        if(email == \"\"){\r\n          setIsLoading(false);\r\n          errorMessage(\"Email is Required\");\r\n        }\r\n        else{\r\n          setIsLoading(false);\r\n          errorMessage(\"Password is Required\");\r\n        }\r\n      }\r\n      else {\r\n        try {\r\n          console.log(email, pass)\r\n          await firebase.auth().signInWithEmailAndPassword(email, pass).then((response) => {\r\n            const uid = response.user.uid;\r\n            console.log(uid);\r\n            firebase.firestore().collection(\"Customers\").doc(uid).get().then((firestoreDocument) => {\r\n              if (!firestoreDocument.exists) {\r\n                ShowError(\"User does not exist anymore.\");\r\n                setIsLoading(false);\r\n              }\r\n              else {\r\n                AsyncStorage.setItem(\"token\", uid);\r\n                navigation.replace(\"Main\")\r\n                successMessage(\"Login Successful\")\r\n              }\r\n            })\r\n          }).catch((err) => {\r\n              setIsLoading(false);\r\n              errorMessage(err.toString());\r\n              console.log(\"1\")\r\n            });\r\n          } \r\n          catch (err) {\r\n            setIsLoading(false);\r\n            errorMessage(err.toString());\r\n            console.log(err)\r\n          }\r\n      }\r\n    }\r\n\r\n  const handleBtnLoading = () => {\r\n    return (isLoading ? <ActivityIndicator style={{flexDirection: \"row\", justifyContent:\"center\", alignItems:\"center\", alignSelf:\"center\", textAlign: \"center\"}} size=\"large\" color=\"#00ff00\" /> : \"Login\")\r\n  }\r\n\r\n  return (\r\n      <View>\r\n          <View style={styles.logoContainer}>\r\n            <FontAwesome5 style={styles.LogoIcons} name=\"user-lock\" size={100} color=\"black\" />\r\n            <Text style={styles.logoText}> Login</Text>\r\n          </View>\r\n          <View style={styles.textInputContainer}>\r\n              <AppInput onChangeText={(e)=>setEmail(e)} keyboardType='email-address' placeholder={\"Email\"} name={\"user\"} size={25} />\r\n              <AppInput onChangeText={(e)=>setPass(e)} secureTextEntry={true} placeholder={\"Password\"} name={\"lock\"} size={25} />\r\n              <TouchableOpacity>\r\n                <Text style={{textAlign:\"right\", marginRight:5}}>Forget Password?</Text>\r\n              </TouchableOpacity>\r\n          </View>\r\n          <AppButton title={handleBtnLoading()} onPress={handleLogin} />\r\n          <TouchableOpacity onPress={()=>navigation.navigate(\"Register\")}>\r\n              <Text style={{textAlign:\"center\", marginTop:15}}>Create new Account?</Text>\r\n          </TouchableOpacity>\r\n          <FlashMessage position=\"top\" />\r\n      </View>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  logoContainer:{\r\n    marginTop:50,\r\n    flexDirection: \"column\",\r\n  },\r\n  LogoIcons:{\r\n    textAlign: \"center\",\r\n  },\r\n  logoText: {\r\n    fontSize: 35,\r\n    textAlign: \"center\"\r\n    \r\n  },\r\n  textInputContainer: {\r\n    marginTop: 30,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}